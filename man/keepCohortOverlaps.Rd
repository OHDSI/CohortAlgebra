% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KeepCohortOverlaps.R
\name{keepCohortOverlaps}
\alias{keepCohortOverlaps}
\title{Keep records in cohort that overlap with another cohort}
\usage{
keepCohortOverlaps(
  connectionDetails = NULL,
  connection = NULL,
  cohortDatabaseSchema = NULL,
  cohortTable = "cohort",
  firstCohortId,
  secondCohortId,
  newCohortId,
  offsetCohortStartDate = 0,
  offsetCohortEndDate = 0,
  restrictSecondCohortStartBeforeFirstCohortStart = FALSE,
  restrictSecondCohortStartAfterFirstCohortStart = FALSE,
  minimumOverlapDays = 1,
  purgeConflicts = FALSE,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema")
)
}
\arguments{
\item{connectionDetails}{An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package. Can be left NULL if \code{connection} is
provided.}

\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{cohortDatabaseSchema}{Schema name where your cohort tables reside. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{cohortTable}{The name of the cohort table.}

\item{firstCohortId}{The cohort id of the cohort whose records will be retained after the operation.}

\item{secondCohortId}{The cohort id of the cohort that will be used to check for the presence of overlap.}

\item{newCohortId}{The cohort id of the result cohort.}

\item{offsetCohortStartDate}{(Default = 0) If you want to offset cohort start date, please provide a integer number.}

\item{offsetCohortEndDate}{(Default = 0) If you want to offset cohort start date, please provide a integer number.}

\item{restrictSecondCohortStartBeforeFirstCohortStart}{(Default = FALSE) If TRUE, then the secondCohort's cohort_start_date
should be < firstCohort's cohort_start_date.}

\item{restrictSecondCohortStartAfterFirstCohortStart}{(Default = FALSE) If TRUE, then the secondCohort's cohort_start_date
should be > firstCohort's cohort_start_date.}

\item{minimumOverlapDays}{(Default = 1) The minimum number of days of overlap.}

\item{purgeConflicts}{If there are conflicts in the target cohort table i.e. the target cohort table
already has records with newCohortId, do you want to purge and replace them
with transformed. By default - it will not be replaced, and an error message is thrown.}

\item{tempEmulationSchema}{Some database platforms like Oracle and Impala do not truly support
temp tables. To emulate temp tables, provide a schema with write
privileges where temp tables can be created.}
}
\description{
Keep records in cohort that overlap with another cohort. Given a Cohort A, check if the records of
subjects in cohort A overlaps with records for the same subject in cohort B. If there is overlap
then only keep those records in Cohort A. All non overlapping records in Cohort A will be removed.
Overlap is defined as b.cohort_end_date >= a.cohort_start_date AND b.cohort_start_date <= a.cohort_end_date.
The overlap logic maybe offset by using a startDayOffSet (applied on cohort A's cohort_start_date)
and endDayOffSet (applied on Cohort A's cohort_end_date). If while applying offset, the window becomes
such that (a.cohort_start_date + startDayOffSet) > (a.cohort_end_date + endDayOffset) that record is ignored
and thus deleted.

By default we are looking for atleast one day of overlap. We can change this to look for any number of overlap
days e.g. 2 days of overlap in the window. The overlap days are calculated as the total number of days
between maximum of cohort_start_date's of both cohorts, and minimum of cohort_end_date's of both cohorts, using
offset when used.

Overlap formula is (min(a.cohort_end_date, b.cohort_end_date) - max(a.cohort_start_date, b.cohort_start_date)) + 1.
Note the use of +1, i.e. the lowest number of days of overlap is 1 day.

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
\dontrun{
keepCohortOverlaps(
  connectionDetails = Eunomia::getEunomiaConnectionDetails(),
  cohortDatabaseSchema = "main",
  cohortTable = "cohort",
  firstCohortId = 1,
  secondCohortId = 2,
  newCohortId = 9,
  purgeConflicts = TRUE
)
}

}
