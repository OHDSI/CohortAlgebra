% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NearestInterval.R
\name{nearestInterval}
\alias{nearestInterval}
\title{Nearest interval cohort(s)}
\usage{
nearestInterval(
  connectionDetails = NULL,
  connection = NULL,
  sourceCohortDatabaseSchema = NULL,
  sourceCohortTable,
  targetCohortDatabaseSchema = NULL,
  targetCohortTable,
  targetCohortId,
  intervalCohortIds,
  newCohortId,
  purgeConflicts = FALSE,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema")
)
}
\arguments{
\item{connectionDetails}{An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package. Can be left NULL if \code{connection} is
provided.}

\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{sourceCohortDatabaseSchema}{Schema name where your source cohort tables reside. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{sourceCohortTable}{The name of the source cohort table.}

\item{targetCohortDatabaseSchema}{Schema name where your target cohort tables reside. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{targetCohortTable}{The name of the target cohort table.}

\item{targetCohortId}{The cohort id to apply the interval logic on}

\item{intervalCohortIds}{The cohort ids of the cohort that the target cohort has to be temporally proximal/nearest to}

\item{newCohortId}{The cohort id of the output cohort.}

\item{purgeConflicts}{If there are conflicts in the target cohort table i.e. the target cohort table
already has records with newCohortId, do you want to purge and replace them
with transformed. By default - it will not be replaced, and an error message is thrown.}

\item{tempEmulationSchema}{Some database platforms like Oracle and Impala do not truly support
temp tables. To emulate temp tables, provide a schema with write
privileges where temp tables can be created.}
}
\description{
Find the nearest interval cohort among a set of interval Cohort
for the first occurrence of a target cohort.

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
\dontrun{
nearestInterval(
  connectionDetails = Eunomia::getEunomiaConnectionDetails(),
  sourceCohortDatabaseSchema = "main",
  sourceCohortTable = "cohort",
  targetCohortId = 1,
  newCohortId = 9,
  intervalCohortIds = c(2, 3, 9),
  purgeConflicts = TRUE
)
}
}
