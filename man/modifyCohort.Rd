% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModifyCohorts.R
\name{modifyCohort}
\alias{modifyCohort}
\title{Modify cohort}
\usage{
modifyCohort(
  connectionDetails = NULL,
  connection = NULL,
  cohortDatabaseSchema = NULL,
  cdmDatabaseSchema = NULL,
  cohortTable = "cohort",
  oldCohortId,
  newCohortId = oldCohortId,
  cohortStartCensorDate = NULL,
  cohortEndCensorDate = NULL,
  cohortStartFilterRange = NULL,
  cohortEndFilterRange = NULL,
  cohortStartPadDays = NULL,
  cohortEndPadDays = NULL,
  filterGenderConceptId = NULL,
  filterByAgeRange = NULL,
  firstOccurrence = FALSE,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema"),
  purgeConflicts = TRUE
)
}
\arguments{
\item{connectionDetails}{An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package. Can be left NULL if \code{connection} is
provided.}

\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{cohortDatabaseSchema}{Schema name where your cohort tables reside. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{cdmDatabaseSchema}{Schema name where your patient-level data in OMOP CDM format resides.
Note that for SQL Server, this should include both the database and
schema name, for example 'cdm_data.dbo'.}

\item{cohortTable}{The name of the cohort table.}

\item{oldCohortId}{The cohort id of the cohort that needs to be modified.}

\item{newCohortId}{The cohort id of the result cohort.}

\item{cohortStartCensorDate}{the minimum date for the cohort. All rows with cohort start date before this date
will be censored to given date.}

\item{cohortEndCensorDate}{the maximum date for the cohort. All rows with cohort end date after this date
will be censored to given date.}

\item{cohortStartFilterRange}{A range of dates representing minimum to maximum to filter the cohort by its cohort start
date e.g c(as.Date('1999-01-01'), as.Date('1999-12-31'))}

\item{cohortEndFilterRange}{A range of dates representing minimum to maximum to filter the cohort by its cohort end date e.g c(as.Date('1999-01-01'), as.Date('1999-12-31'))}

\item{cohortStartPadDays}{An integer value to pad the cohort start date. Default is 0 - no padding. The final cohort will
have no days outside the observation period dates of the initial observation period. If negative
padding, then cohortStartDate will not shift to before corresponding observationPeriodStartDate,
it will be forced to be equal to observationPeriodStartDate. If positive padding, then
cohortStartDate will not shift beyond observationPeriodEndDate, it will be forced to be
equal to observationPeriodEndDate. Also cohortStartDate will not be more than
cohortEndDate - it will be forced to be equal to cohortEndDate.}

\item{cohortEndPadDays}{An integer value to pad the cohort start date. Default is 0 - no padding. The final cohort will
have no days outside the observation period dates of the initial observation period. If negative
padding, then cohortEndDate will not shift to before corresponding observationPeriodEndDate,
it will be forced to be equal to observationPeriodEndDate. If positive padding, then
cohortEndDate will not shift beyond observationPeriodStartDate, it will be forced to be
equal to observationPeriodStartDate. Also cohortEndDate will not be less than
cohortStartDate - it will be forced to be equal to cohortStartDate.}

\item{filterGenderConceptId}{Provide an array of integers corresponding to conceptId to look for in the gender_concept_id
field of the person table.}

\item{filterByAgeRange}{Provide an array of two values, where second value is >= first value to filter the persons age on cohort_start_date.
Age is calculated as YEAR(cohort_start_date) - person.year_of_birth}

\item{firstOccurrence}{Do you want to restrict the cohort to the first occurrence per person?}

\item{tempEmulationSchema}{Some database platforms like Oracle and Impala do not truly support
temp tables. To emulate temp tables, provide a schema with write
privileges where temp tables can be created.}

\item{purgeConflicts}{If there are conflicts in the target cohort table i.e. the target cohort table
already has records with newCohortId, do you want to purge and replace them
with transformed. By default - it will not be replaced, and an error message is thrown.}
}
\description{
Modify cohort by censoring, padding, limiting cohorts periods.
Censoring: Provide a date for right, left, both censoring. All cohorts will be truncated to the given date.
Pad days: Add days to either cohort start or cohort end dates. Maybe negative numbers. Final cohort will not be outside the persons observation period.
Limit cohort periods: Filter the cohorts to a given date range of cohort start, or cohort end or both.

cdmDataschema is required when eraConstructorPad is > 0. eraConstructorPad is optional.

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
\dontrun{
CohortAlgebra:::modifyCohort(
  connection = connection,
  cohortDatabaseSchema = cohortDatabaseSchema,
  cohortTable = tableName,
  oldCohortId = 3,
  newCohortId = 2,
  cohortEndFilterRange = c(as.Date("2010-01-01"), as.Date("2010-01-09")),
  purgeConflicts = TRUE
)
}

}
