[{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How to Use CohortAlgebra R Package","text":"(package part HADES.) idea behind package allow construction new cohorts previously instantiated cohorts cohort table. cohorts OHDSI standard definition: “cohort set persons satisfy one inclusion criteria duration time.” One person may belong multiple cohorts One person may belong cohort multiple different time periods One person may belong cohort multiple times period time cohort may zero members represented cohort table cohort_definition_id, subject_id, cohort_start_date cohort_end_date. details concept cohort please review Book OHDSI. package allows creation new cohorts previously instantiated cohort table using cohort algebra (similar temporal set algebra). output one new cohorts.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"How to Use CohortAlgebra R Package","text":"installable R-package may installed follows:","code":"remotes::install_github(\"OHDSI/CohortAlgebra\")"},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"cohort-union","dir":"Articles","previous_headings":"Introduction","what":"Cohort UNION","title":"How to Use CohortAlgebra R Package","text":"Given two cohorts, UNION operator cohorts creates new cohort continuous days persons present cohorts. example: given cohort table follows union two cohorts expected give us perform Cohort Union, use unionCohorts function. function requires input data.frame called oldToNewCohortId. specify cohort id’s cohorts want union. newCohortId cohortId resultant cohort. oldCohortId cohorts already cohort table. Now new cohortId ‘3’ union cohortIds 1 2. Note: target cohort table cohort cohortId = 3, running union function - cause conflict. cases, union function run. can purge records cohortId = 3 target cohort table. parameter purgeConflicts delete cohort records cohort table cohortId cohortId newCohort.","code":"cohort #> # A tibble: 3 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  1         1 2022-01-01      2022-03-01    #> 2                  2         1 2022-02-10      2022-05-10    #> 3                  2         1 2022-08-15      2022-12-30 cohortExpected #> # A tibble: 2 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  3         1 2022-01-01      2022-05-10    #> 2                  3         1 2022-08-15      2022-12-30 oldToNewCohortId <-   dplyr::tibble(     oldCohortId = c(1, 2, 2),     newCohortId = c(3, 3, 3)   )  CohortAlgebra::unionCohorts(   connection = connection,   sourceCohortDatabaseSchema = cohortDatabaseSchema,   sourceCohortTable = tableName,   targetCohortDatabaseSchema = cohortDatabaseSchema,   targetCohortTable = tableName,   oldToNewCohortId = oldToNewCohortId ) data #> # A tibble: 2 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  3         1 2022-01-01      2022-05-10    #> 2                  3         1 2022-08-15      2022-12-30"},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"intersect-cohort","dir":"Articles","previous_headings":"Introduction","what":"InterSect Cohort","title":"How to Use CohortAlgebra R Package","text":"Given two cohorts, INTERSECT operator cohorts creates new cohort continuous days persons present cohorts.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"intersect-cohort-example-1","dir":"Articles","previous_headings":"Introduction > InterSect Cohort","what":"Intersect cohort example 1","title":"How to Use CohortAlgebra R Package","text":"Input: Output","code":"cohort #> # A tibble: 2 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  1         1 2022-01-01      2022-01-15    #> 2                  2         1 2021-12-15      2022-01-30 CohortAlgebra::intersectCohorts(   connection = connection,   sourceCohortDatabaseSchema = cohortDatabaseSchema,   sourceCohortTable = tableName,   targetCohortDatabaseSchema = cohortDatabaseSchema,   targetCohortTable = tableName,   cohortIds = c(1, 2),   newCohortId = 3 )"},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"intersect-cohort-example-2","dir":"Articles","previous_headings":"Introduction > InterSect Cohort","what":"Intersect cohort example 2","title":"How to Use CohortAlgebra R Package","text":"Input: Output","code":"cohort #> # A tibble: 3 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  1         1 2022-01-01      2022-01-15    #> 2                  2         1 2021-12-15      2022-01-05    #> 3                  2         1 2022-01-10      2022-01-30 CohortAlgebra::intersectCohorts(   connection = connection,   sourceCohortDatabaseSchema = cohortDatabaseSchema,   sourceCohortTable = tableName,   targetCohortDatabaseSchema = cohortDatabaseSchema,   targetCohortTable = tableName,   cohortIds = c(1, 2),   newCohortId = 3 )"},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"intersect-cohort-example-3","dir":"Articles","previous_headings":"Introduction > InterSect Cohort","what":"Intersect cohort example 3","title":"How to Use CohortAlgebra R Package","text":"Input: Output","code":"cohort #> # A tibble: 3 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  1         1 2022-01-01      2022-01-15    #> 2                  2         1 2021-12-15      2022-01-30    #> 3                  3         1 2022-03-01      2022-03-15 CohortAlgebra::intersectCohorts(   connection = connection,   sourceCohortDatabaseSchema = cohortDatabaseSchema,   sourceCohortTable = tableName,   targetCohortDatabaseSchema = cohortDatabaseSchema,   targetCohortTable = tableName,   cohortIds = c(1, 2, 3),   newCohortId = 4 )"},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"intersect-cohort-example-4","dir":"Articles","previous_headings":"Introduction > InterSect Cohort","what":"Intersect cohort example 4","title":"How to Use CohortAlgebra R Package","text":"Input: Output","code":"cohort #> # A tibble: 3 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  1         1 2022-01-01      2022-01-15    #> 2                  2         1 2021-12-15      2022-01-30    #> 3                  3         1 2022-03-01      2022-03-15 CohortAlgebra::intersectCohorts(   connection = connection,   sourceCohortDatabaseSchema = cohortDatabaseSchema,   sourceCohortTable = tableName,   targetCohortDatabaseSchema = cohortDatabaseSchema,   targetCohortTable = tableName,   cohortIds = c(1, 2, 3),   newCohortId = 4 )"},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"intersect-cohort-example-5","dir":"Articles","previous_headings":"Introduction > InterSect Cohort","what":"Intersect cohort example 5","title":"How to Use CohortAlgebra R Package","text":"Input: Output","code":"cohort #> # A tibble: 2 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  1         1 2022-01-01      2022-01-01    #> 2                  2         1 2022-01-01      2022-01-02"},{"path":"https://ohdsi.github.io/CohortAlgebra/articles/HowToUseCohortAlgebraRPackage.html","id":"minus-cohort","dir":"Articles","previous_headings":"Introduction","what":"Minus Cohort","title":"How to Use CohortAlgebra R Package","text":"Input: Output example 1 cohorts switched, .e. minus cohort 1 Cohort 2 Output Sequence cohorts important minusCohort","code":"cohort #> # A tibble: 2 × 4 #>   cohortDefinitionId subjectId cohortStartDate cohortEndDate #>                <dbl>     <dbl> <date>          <date>        #> 1                  1         1 2022-01-01      2022-03-01    #> 2                  2         1 2022-02-10      2022-05-10 CohortAlgebra::minusCohorts(   connection = connection,   sourceCohortDatabaseSchema = cohortDatabaseSchema,   sourceCohortTable = tableName,   targetCohortDatabaseSchema = cohortDatabaseSchema,   targetCohortTable = tableName,   firstCohortId = 1,   secondCohortId = 2,   newCohortId = 3 ) CohortAlgebra::minusCohorts(   connection = connection,   sourceCohortDatabaseSchema = cohortDatabaseSchema,   sourceCohortTable = tableName,   targetCohortDatabaseSchema = cohortDatabaseSchema,   targetCohortTable = tableName,   firstCohortId = 2,   secondCohortId = 1,   newCohortId = 4 )"},{"path":"https://ohdsi.github.io/CohortAlgebra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gowtham Rao. Author, maintainer. Observational Health Data Science Informatics. Copyright holder.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rao G (2025). CohortAlgebra: Use Interval Algebra Create New Cohort(s) Existing Cohorts. R package version 0.3.1, https://CRAN.R-project.org/package=CohortAlgebra, https://ohdsi.github.io/CohortAlgebra/.","code":"@Manual{,   title = {CohortAlgebra: Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts},   author = {Gowtham Rao},   year = {2025},   note = {R package version 0.3.1, https://CRAN.R-project.org/package=CohortAlgebra},   url = {https://ohdsi.github.io/CohortAlgebra/}, }"},{"path":[]},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"CohortAlgebra R package allows create new cohorts previously instantiated cohorts cohort table. New cohorts may created performing union, intersect minus one cohorts. Cohort Union: Takes two cohorts creates new cohort dates subject present given cohorts. Cohort Intersect: Takes two cohorts creates new cohort dates subject present given cohorts. person present given cohort, subject final cohort. Cohort Minus: Take two cohorts (different Cohort union intersect). Creates new cohort dates subject present first cohort second cohort. Note: sequence cohorts important Cohort Minus. person second cohort, dates person present first cohort part final cohort. capabilities include modify cohorts allows censor filter instantiated cohort, pad instantiated cohort additional dates. can also remove persons one set cohorts, subject present another set cohorts.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"Create new cohorts existing cohorts.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"technology","dir":"","previous_headings":"","what":"Technology","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"CohortAlgebra R package.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"system-requirements","dir":"","previous_headings":"","what":"System Requirements","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"Requires R (version 3.6.0 higher).","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"See instructions configuring R environment, including RTools Java. R, use following commands download install CohortAlgebra:","code":"install.packages(\"remotes\") remotes::install_github(\"ohdsi/CohortAlgebra\")"},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"user-documentation","dir":"","previous_headings":"","what":"User Documentation","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"Documentation can found package website. PDF versions documentation also available: * Package manual: CohortAlgebra.pdf","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"Developer questions/comments/feedback: OHDSI Forum use GitHub issue tracker bugs/issues/enhancements","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"Read can contribute package.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"CohortAlgebra licensed Apache License 2.0","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"CohortAlgebra developed R Studio.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/index.html","id":"development-status","dir":"","previous_headings":"","what":"Development status","title":"Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts","text":"CohortAlgebra development.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/appendCohortTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Append cohort data from multiple cohort tables(s) — appendCohortTables","title":"Append cohort data from multiple cohort tables(s) — appendCohortTables","text":"Append cohort data multiple cohort tables.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/appendCohortTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append cohort data from multiple cohort tables(s) — appendCohortTables","text":"","code":"appendCohortTables(   connectionDetails = NULL,   connection = NULL,   sourceTables,   targetCohortDatabaseSchema = NULL,   targetCohortTable,   isTempTable = FALSE,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\") )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/appendCohortTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append cohort data from multiple cohort tables(s) — appendCohortTables","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. sourceTables data.frame object columns sourceCohortDatabaseSchema, sourceCohortTableName. targetCohortDatabaseSchema Schema name target cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. targetCohortTable name target cohort table. isTempTable output temp table. yes, new temp table created. required active connection. old temp table dropped replaced. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/appendCohortTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append cohort data from multiple cohort tables(s) — appendCohortTables","text":"Nothing returned","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/CohortAlgebra-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortAlgebra: Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts — CohortAlgebra-package","title":"CohortAlgebra: Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts — CohortAlgebra-package","text":"software tool designed generate new cohorts utilizing data previously instantiated cohorts. employs interval algebra operators UNION, INTERSECT, MINUS manipulate data within instantiated cohorts create new cohorts. software tool designed generate new cohorts utilizing data previously instantiated cohorts. employs interval algebra operators UNION, INTERSECT, MINUS manipulate data within instantiated cohorts create new cohorts.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/CohortAlgebra-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortAlgebra: Use of Interval Algebra to Create New Cohort(s) from Existing Cohorts — CohortAlgebra-package","text":"Maintainer: Gowtham Rao rao@ohdsi.org contributors: Observational Health Data Science Informatics [copyright holder]","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/copyCohorts.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy cohorts from one table to another — copyCohorts","title":"Copy cohorts from one table to another — copyCohorts","text":"Copy cohorts one table another table. new cohort table cohort id matches cohort id copied, error displayed.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/copyCohorts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy cohorts from one table to another — copyCohorts","text":"","code":"copyCohorts(   connectionDetails = NULL,   connection = NULL,   oldToNewCohortId,   sourceCohortDatabaseSchema = NULL,   targetCohortDatabaseSchema = sourceCohortDatabaseSchema,   sourceCohortTable,   targetCohortTable,   isTempTable = FALSE,   purgeConflicts = FALSE,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\") )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/copyCohorts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy cohorts from one table to another — copyCohorts","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. oldToNewCohortId data.frame object two columns. oldCohortId newCohortId. integers. oldCohortId cohorts input cohorts need transformed. newCohortId cohortIds corresponding output transformation. oldCohortId = newCohortId data corresponding oldCohortId replaced data newCohortId. sourceCohortDatabaseSchema database schema source cohort table. targetCohortDatabaseSchema database schema source cohort table. sourceCohortTable name source cohort table. targetCohortTable name target cohort table. isTempTable output temp table. yes, new temp table created. required active connection. old temp table dropped replaced. purgeConflicts conflicts target cohort table .e. target cohort table already records newCohortId, want purge replace transformed. default - replaced, error message thrown. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/copyCohorts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy cohorts from one table to another — copyCohorts","text":"Nothing returned","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/deleteCohort.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete cohort — deleteCohort","title":"Delete cohort — deleteCohort","text":"Delete records given set cohorts cohort table. Edit privileges cohort table required.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/deleteCohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete cohort — deleteCohort","text":"","code":"deleteCohort(   connectionDetails = NULL,   connection = NULL,   cohortDatabaseSchema,   cohortTable = \"cohort\",   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   cohortIds )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/deleteCohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete cohort — deleteCohort","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTable name cohort table. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. cohortIds vector one Cohort Ids.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/deleteCohort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete cohort — deleteCohort","text":"Nothing returned","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/eraFyCohorts.html","id":null,"dir":"Reference","previous_headings":"","what":"Era-fy cohort(s) — eraFyCohorts","title":"Era-fy cohort(s) — eraFyCohorts","text":"Given table cohort_definition_id, subject_id, cohort_start_date, cohort_end_date execute era logic. delete replace original rows cohort_definition_id(s). edit privileges cohort table required.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/eraFyCohorts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Era-fy cohort(s) — eraFyCohorts","text":"","code":"eraFyCohorts(   connectionDetails = NULL,   connection = NULL,   sourceCohortDatabaseSchema = NULL,   sourceCohortTable = \"cohort\",   targetCohortDatabaseSchema = NULL,   targetCohortTable,   oldCohortIds,   newCohortId,   eraconstructorpad = 0,   cdmDatabaseSchema = NULL,   purgeConflicts = FALSE,   isTempTable = FALSE,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\") )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/eraFyCohorts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Era-fy cohort(s) — eraFyCohorts","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. sourceCohortDatabaseSchema Schema name source cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. sourceCohortTable name source cohort table. targetCohortDatabaseSchema Schema name target cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. targetCohortTable name target cohort table. oldCohortIds array 1 integer id representing cohort id cohort function applied. newCohortId cohort id output cohort. eraconstructorpad Optional value pad cohort era construction logic. Default = 0. .e. padding. cdmDatabaseSchema Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'. purgeConflicts conflicts target cohort table .e. target cohort table already records newCohortId, want purge replace transformed. default - replaced, error message thrown. isTempTable output temp table. yes, new temp table created. required active connection. old temp table dropped replaced. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/eraFyCohorts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Era-fy cohort(s) — eraFyCohorts","text":"Nothing returned","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/getCohortIdsInCohortTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cohort ids in table — getCohortIdsInCohortTable","title":"Get cohort ids in table — getCohortIdsInCohortTable","text":"Get cohort ids table","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/getCohortIdsInCohortTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cohort ids in table — getCohortIdsInCohortTable","text":"","code":"getCohortIdsInCohortTable(   connection = NULL,   cohortDatabaseSchema = NULL,   cohortTable,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\") )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/getCohortIdsInCohortTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cohort ids in table — getCohortIdsInCohortTable","text":"connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTable name cohort table. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/getCohortIdsInCohortTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cohort ids in table — getCohortIdsInCohortTable","text":"array integers called cohort id.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/intersectCohorts.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersect cohort(s) — intersectCohorts","title":"Intersect cohort(s) — intersectCohorts","text":"Find common cohort period persons present cohorts. Note: subject found cohorts, final cohort.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/intersectCohorts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersect cohort(s) — intersectCohorts","text":"","code":"intersectCohorts(   connectionDetails = NULL,   connection = NULL,   sourceCohortDatabaseSchema = NULL,   sourceCohortTable,   targetCohortDatabaseSchema = NULL,   targetCohortTable,   cohortIds,   newCohortId,   purgeConflicts = FALSE,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\") )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/intersectCohorts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersect cohort(s) — intersectCohorts","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. sourceCohortDatabaseSchema Schema name source cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. sourceCohortTable name source cohort table. targetCohortDatabaseSchema Schema name target cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. targetCohortTable name target cohort table. cohortIds vector one Cohort Ids. newCohortId cohort id output cohort. purgeConflicts conflicts target cohort table .e. target cohort table already records newCohortId, want purge replace transformed. default - replaced, error message thrown. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/intersectCohorts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersect cohort(s) — intersectCohorts","text":"Nothing returned","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/minusCohorts.html","id":null,"dir":"Reference","previous_headings":"","what":"Minus cohort(s) — minusCohorts","title":"Minus cohort(s) — minusCohorts","text":"Given two cohorts, substract (minus) dates first cohort, dates subject also second cohort.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/minusCohorts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minus cohort(s) — minusCohorts","text":"","code":"minusCohorts(   connectionDetails = NULL,   connection = NULL,   sourceCohortDatabaseSchema = NULL,   sourceCohortTable = \"cohort\",   targetCohortDatabaseSchema = sourceCohortDatabaseSchema,   targetCohortTable = sourceCohortTable,   firstCohortId,   secondCohortId,   newCohortId,   purgeConflicts = FALSE,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\") )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/minusCohorts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minus cohort(s) — minusCohorts","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. sourceCohortDatabaseSchema Schema name source cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. sourceCohortTable name source cohort table. targetCohortDatabaseSchema Schema name target cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. targetCohortTable name target cohort table. firstCohortId cohort id cohort subtract. secondCohortId cohort id cohort used subtract. newCohortId cohort id output cohort. purgeConflicts conflicts target cohort table .e. target cohort table already records newCohortId, want purge replace transformed. default - replaced, error message thrown. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/minusCohorts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minus cohort(s) — minusCohorts","text":"Nothing returned","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/reindexCohortsByDays.html","id":null,"dir":"Reference","previous_headings":"","what":"Reindex cohort(s) by relative days — reindexCohortsByDays","title":"Reindex cohort(s) by relative days — reindexCohortsByDays","text":"reindexCohort changes cohort_start_date /cohort_end_date one source cohorts based set reindexing rules. output one valid target cohorts.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/reindexCohortsByDays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reindex cohort(s) by relative days — reindexCohortsByDays","text":"","code":"reindexCohortsByDays(   connectionDetails = NULL,   connection = NULL,   sourceCohortDatabaseSchema = NULL,   sourceCohortTable = \"cohort\",   sourceCohortIds,   targetCohortDatabaseSchema = NULL,   targetCohortTable,   offsetStartAnchor = \"cohort_start_date\",   offsetEndAnchor = \"cohort_end_date\",   reindexRules,   cdmDatabaseSchema = NULL,   purgeConflicts = FALSE,   isTempTable = FALSE,   bulkLoad = Sys.getenv(\"DATABASE_CONNECTOR_BULK_UPLOAD\"),   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\") )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/reindexCohortsByDays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reindex cohort(s) by relative days — reindexCohortsByDays","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. sourceCohortDatabaseSchema Schema name source cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. sourceCohortTable name source cohort table. sourceCohortIds array one cohortIds source cohort table. targetCohortDatabaseSchema Schema name target cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. targetCohortTable name target cohort table. offsetStartAnchor Determines anchor point start reindexing. can either cohort_start_date cohort_end_date sourceCohort. offsetEndAnchor Determines anchor point end reindexing. can either cohort_start_date cohort_end_date targetCohort. reindexRules data frame specifying reindexing rules. contain following columns: 'offsetId' unique key identifying newly generated cohorts. offsetId corresponds specific reindex rule used create new cohort id targetCohort. 'offsetStartValue' integer value indicating number days 'offsetStartAnchor'. positive values extend, negative values shorten start date 'offsetStartAnchor'. offsetEndValue' integer value indicating number days offset end date. Positive values extend, negative values shorten end date 'offsetEndAnchor'. cdmDatabaseSchema Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'. purgeConflicts conflicts target cohort table .e. target cohort table already records newCohortId, want purge replace transformed. default - replaced, error message thrown. isTempTable output temp table. yes, new temp table created. required active connection. old temp table dropped replaced. bulkLoad See 'insertTable' function 'DatabaseConnector'. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/reindexCohortsByDays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reindex cohort(s) by relative days — reindexCohortsByDays","text":"output temp table, name temp table returned.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/removeOverlappingSubjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove subjects in cohort that overlap with another cohort — removeOverlappingSubjects","title":"Remove subjects in cohort that overlap with another cohort — removeOverlappingSubjects","text":"Remove subjects cohort overlap another cohort. Given Cohort , check records subjects cohort overlaps records subject cohort B. overlap remove records subject Cohort . Overlap defined b.cohort_end_date >= .cohort_start_date b.cohort_start_date <= .cohort_end_date. overlap logic maybe offset using startDayOffSet (applied cohort 's cohort_start_date) endDayOffSet (applied Cohort 's cohort_end_date). applying offset, window becomes (.cohort_start_date + startDayOffSet) > (.cohort_end_date + endDayOffset) record ignored thus deleted.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/removeOverlappingSubjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove subjects in cohort that overlap with another cohort — removeOverlappingSubjects","text":"","code":"removeOverlappingSubjects(   connectionDetails = NULL,   connection = NULL,   cohortDatabaseSchema,   cohortId,   newCohortId,   cohortsWithSubjectsToRemove,   offsetCohortStartDate = -99999,   offsetCohortEndDate = 99999,   restrictSecondCohortStartBeforeFirstCohortStart = FALSE,   restrictSecondCohortStartAfterFirstCohortStart = FALSE,   cohortTable = \"cohort\",   purgeConflicts = FALSE,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\") )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/removeOverlappingSubjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove subjects in cohort that overlap with another cohort — removeOverlappingSubjects","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortId cohort id cohort whose subjects removed. newCohortId cohort id output cohort. cohortsWithSubjectsToRemove array one cohorts subjects remove given cohorts. offsetCohortStartDate (Default = 0) want offset cohort start date, please provide integer number. offsetCohortEndDate (Default = 0) want offset cohort start date, please provide integer number. restrictSecondCohortStartBeforeFirstCohortStart (Default = FALSE) TRUE, secondCohort's cohort_start_date < firstCohort's cohort_start_date. restrictSecondCohortStartAfterFirstCohortStart (Default = FALSE) TRUE, secondCohort's cohort_start_date > firstCohort's cohort_start_date. cohortTable name cohort table. purgeConflicts conflicts target cohort table .e. target cohort table already records newCohortId, want purge replace transformed. default - replaced, error message thrown. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/removeOverlappingSubjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove subjects in cohort that overlap with another cohort — removeOverlappingSubjects","text":"Nothing returned","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/unionCohorts.html","id":null,"dir":"Reference","previous_headings":"","what":"Union cohort(s) — unionCohorts","title":"Union cohort(s) — unionCohorts","text":"Given specified array cohortIds cohort table, perform cohort union operator create new cohorts.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/unionCohorts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Union cohort(s) — unionCohorts","text":"","code":"unionCohorts(   connectionDetails = NULL,   connection = NULL,   sourceCohortDatabaseSchema = NULL,   sourceCohortTable,   targetCohortDatabaseSchema = NULL,   targetCohortTable,   oldToNewCohortId,   isTempTable = FALSE,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   purgeConflicts = FALSE )"},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/unionCohorts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Union cohort(s) — unionCohorts","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. sourceCohortDatabaseSchema Schema name source cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. sourceCohortTable name source cohort table. targetCohortDatabaseSchema Schema name target cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. targetCohortTable name target cohort table. oldToNewCohortId data.frame object two columns. oldCohortId newCohortId. integers. oldCohortId cohorts input cohorts need transformed. newCohortId cohortIds corresponding output transformation. oldCohortId = newCohortId data corresponding oldCohortId replaced data newCohortId. isTempTable output temp table. yes, new temp table created. required active connection. old temp table dropped replaced. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. purgeConflicts conflicts target cohort table .e. target cohort table already records newCohortId, want purge replace transformed. default - replaced, error message thrown.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/reference/unionCohorts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Union cohort(s) — unionCohorts","text":"Nothing returned","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-031","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.3.1","title":"CohortAlgebra 0.3.1","text":"Removed dependency Andromeda","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-030","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.3.0","title":"CohortAlgebra 0.3.0","text":"CRAN release: 2024-06-04 Optimized sql Cohort Era. Thank @chrisknoll wrote SQL","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-021","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.2.1","title":"CohortAlgebra 0.2.1","text":"CRAN release: 2024-06-02 Explicitly cast cohort_definition_id, subject_id BIGINT cohort_start_date, cohort_end_date DATE. reduces chances cohort table INT date-time.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-020","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.2.0","title":"CohortAlgebra 0.2.0","text":"CRAN release: 2024-01-28 Added new function reindexRules(). Tests added. Tests pass. Improved test coverage.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-010","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.1.0","title":"CohortAlgebra 0.1.0","text":"CRAN release: 2023-12-09 Added new function called reindexCohortsByDays() Improved test coverage.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-004","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.0.4","title":"CohortAlgebra 0.0.4","text":"CRAN release: 2023-09-13 Made CRAN compatible.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-003","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.0.3","title":"CohortAlgebra 0.0.3","text":"Made CRAN compatible.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-002","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.0.2","title":"CohortAlgebra 0.0.2","text":"Removed experimental functions.","code":""},{"path":"https://ohdsi.github.io/CohortAlgebra/news/index.html","id":"cohortalgebra-001","dir":"Changelog","previous_headings":"","what":"CohortAlgebra 0.0.1","title":"CohortAlgebra 0.0.1","text":"unreleased package.","code":""}]
